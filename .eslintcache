[{"/home/lpastine/Dev/Projects/jbook/src/index.tsx":"1","/home/lpastine/Dev/Projects/jbook/src/components/code-editor.tsx":"2","/home/lpastine/Dev/Projects/jbook/src/components/preview.tsx":"3","/home/lpastine/Dev/Projects/jbook/src/bundler/index.ts":"4","/home/lpastine/Dev/Projects/jbook/src/bundler/plugins/unpkg-path-plugin.ts":"5","/home/lpastine/Dev/Projects/jbook/src/bundler/plugins/fetch-plugin.ts":"6","/home/lpastine/Dev/Projects/jbook/src/components/code-cell.tsx":"7","/home/lpastine/Dev/Projects/jbook/src/components/resizable.tsx":"8"},{"size":328,"mtime":1666728944145,"results":"9","hashOfConfig":"10"},{"size":2115,"mtime":1666730910871,"results":"11","hashOfConfig":"10"},{"size":1086,"mtime":1666732928007,"results":"12","hashOfConfig":"10"},{"size":736,"mtime":1666728664700,"results":"13","hashOfConfig":"10"},{"size":830,"mtime":1666176866036,"results":"14","hashOfConfig":"10"},{"size":1799,"mtime":1666179380322,"results":"15","hashOfConfig":"10"},{"size":812,"mtime":1666732693315,"results":"16","hashOfConfig":"10"},{"size":1737,"mtime":1666775685239,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1e16s4v",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lpastine/Dev/Projects/jbook/src/index.tsx",[],["36","37"],"/home/lpastine/Dev/Projects/jbook/src/components/code-editor.tsx",[],"/home/lpastine/Dev/Projects/jbook/src/components/preview.tsx",[],"/home/lpastine/Dev/Projects/jbook/src/bundler/index.ts",[],"/home/lpastine/Dev/Projects/jbook/src/bundler/plugins/unpkg-path-plugin.ts",[],"/home/lpastine/Dev/Projects/jbook/src/bundler/plugins/fetch-plugin.ts",[],"/home/lpastine/Dev/Projects/jbook/src/components/code-cell.tsx",["38"],"import { useState } from 'react';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\nimport bundle from '../bundler';\nimport Resizable from './resizable';\n\nconst CodeCell = () => {\n  const [code, setCode] = useState('');\n  const [input, setInput] = useState<string>('');\n\n  const onClick = async () => {\n    const output: string = await bundle(input);\n    setCode(output);\n  };\n\n  return (\n    <Resizable direction=\"vertical\">\n      <div style={{ height: '100%', display: 'flex', flexDirection: 'row' }}>\n        <Resizable direction=\"horizontal\">\n          <CodeEditor\n            initialValue=\"const a = 1;\"\n            onChange={(value) => setInput(value)}\n          />\n        </Resizable>\n        <Preview code={code} />\n      </div>\n    </Resizable>\n  );\n};\n\nexport default CodeCell;\n","/home/lpastine/Dev/Projects/jbook/src/components/resizable.tsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":11,"column":9,"nodeType":"45","messageId":"46","endLine":11,"endColumn":16},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"@typescript-eslint/no-unused-vars","'onClick' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]